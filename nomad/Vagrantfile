# -*- mode: ruby -*-
# vi: set ft=ruby :

# Base box selection
base_box = ENV['BASE_BOX'] || "bento/ubuntu-16.04"

# Consul variable defaults
consul_group = ENV['CONSUL_GROUP'] || "consul"
consul_user = ENV['CONSUL_USER'] || "consul"
consul_comment = ENV['CONSUL_COMMENT'] || "Consul"
consul_home = ENV['CONSUL_HOME'] || "/srv/consul"
consul_version = ENV['CONSUL_VERSION'] || "0.9.2"
consul_download_url = ENV['CONSUL_ENT_URL'] || "https://releases.hashicorp.com/consul/#{consul_version}/consul_#{consul_version}_linux_amd64.zip"

# Nomad variable defaults
nomad_version = ENV['NOMAD_VERSION'] || "0.6.2"
nomad_download_url = ENV['NOMAD_ENT_URL'] || "https://releases.hashicorp.com/nomad/#{nomad_version}/nomad_#{nomad_version}_linux_amd64.zip"

$script = <<SCRIPT
# Set hostname's IP to make advertisement work
sudo sed -i -e "s/.*nomad.*/$(ip route get 1 | awk '{print $NF;exit}') nomad/" /etc/hosts
SCRIPT

Vagrant.configure("2") do |config|
  # Use vagrant insecure public key
  # Important: comment this out to restrict access
  config.ssh.insert_key = false

  # Setup networking
  config.vm.network :private_network, ip: "192.168.50.152"
  config.vm.network :forwarded_port, guest: 4646, host: 4646, auto_correct: true
  config.vm.network "private_network", type: "dhcp"

  # Use base_box set at the top of this file
  config.vm.box = base_box
  config.vm.hostname = "nomad"
  config.vm.provision "shell", inline: $script, privileged: false

  # Copy the Consul, Nomad, and shared directories to the vm
  config.vm.provision "file", source: "../../packer-templates", destination: "/tmp"

  # Bootstrap the vm
  config.vm.provision "shell", inline: "bash /tmp/shared/scripts/base.sh"

  # Setup Consul user
  config.vm.provision "shell", inline: "bash /tmp/shared/scripts/setup-user.sh",
    env: {
      "GROUP" => consul_group,
      "USER" => consul_user,
      "COMMENT" => consul_comment,
      "HOME" => consul_home
    }

  # Install Consul
  config.vm.provision "shell", inline: "bash /tmp/consul/scripts/install-consul.sh",
    env: {
      "VERSION" => consul_version,
      "URL" => consul_download_url,
    }

  config.vm.provision "shell", inline: "bash /tmp/consul/scripts/install-consul-systemd.sh"

  # Install Nomad
  config.vm.provision "shell", inline: "bash /tmp/nomad/scripts/install-nomad.sh",
    env: {
      "VERSION" => nomad_version,
      "URL" => nomad_download_url
    }

  config.vm.provision "shell", inline: "bash /tmp/nomad/scripts/install-nomad-systemd.sh"
  config.vm.provision "shell", inline: "bash /tmp/nomad/scripts/install-docker.sh"
  config.vm.provision "shell", inline: "bash /tmp/nomad/scripts/install-oracle-jdk.sh"

  # Setup and run tests
  config.vm.provision "shell", inline: "cd /tmp/shared/scripts && bash setup-testing.sh"
  config.vm.provision "shell", inline: "cd /tmp/consul && rake spec"
  config.vm.provision "shell", inline: "cd /tmp/nomad && rake spec"

  # Uncomment to run cleanup script - disabled by default for local debugging purposes
  # config.vm.provision "shell", inline: "bash /tmp/shared/scripts/cleanup.sh"

  # Increase memory for Parallels Desktop
  config.vm.provider "parallels" do |p, o|
    p.memory = "1024"
  end

  # Increase memory for Virtualbox
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
  end

  # Increase memory for VMware
  ["vmware_fusion", "vmware_workstation"].each do |p|
    config.vm.provider p do |v|
      v.vmx["memsize"] = "1024"
    end
  end
end

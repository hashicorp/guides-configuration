# -*- mode: ruby -*-
# vi: set ft=ruby :

# base box selection
base_box = ENV['BASE_BOX'] || "bento/ubuntu-16.04"

# consul variable defaults
consul_user = "consul"
consul_group = "consul"
consul_comment = "Consul"
consul_home = ENV['CONSUL_HOME'] || "/srv/consul"
consul_version = ENV['CONSUL_VERSION'] || "0.9.2"
consul_download_url = ENV['CONSUL_ENT_URL'] || "https://releases.hashicorp.com/consul/#{consul_version}/consul_#{consul_version}_linux_amd64.zip"

# vault variable defaults
vault_user = "vault"
vault_group = "vault"
vault_comment = "Vault"
vault_home = ENV['VAULT_HOME'] || "/srv/vault"
vault_version = ENV['VAULT_VERSION'] || "0.8.1"
vault_download_url = ENV['VAULT_ENT_URL'] || "https://releases.hashicorp.com/vault/#{vault_version}/vault_#{vault_version}_linux_amd64.zip"

Vagrant.configure("2") do |config|
  # Use vagrant insecure public key
  # Important: comment this out to restrict access
  config.ssh.insert_key = false

  # Setup networking
  config.vm.network :private_network, ip: "192.168.50.151"
  config.vm.network :forwarded_port, guest: 8200, host: 8200, auto_correct: true
  config.vm.network "private_network", type: "dhcp"

  # Use base_box set at the top of this file
  config.vm.box = base_box
  config.vm.hostname = "vault"

  # Copy the Consul, Vault, and shared directories to the vm
  config.vm.provision "file", source: "../../packer-templates", destination: "/tmp"

  # Bootstrap the vm
  config.vm.provision "shell", inline: "bash /tmp/shared/scripts/base.sh"
  config.vm.provision "shell", inline: "bash /tmp/shared/scripts/setup-user.sh",
    env: {
      "USER" => consul_user,
      "GROUP" => consul_group,
      "COMMENT" => consul_comment,
      "HOME" => consul_home
    }
  config.vm.provision "shell", inline: "bash /tmp/shared/scripts/setup-user.sh",
    env: {
      "USER" => vault_user,
      "GROUP" => vault_group,
      "COMMENT" => vault_comment,
      "HOME" => vault_home
    }

  # Install consul
  config.vm.provision "shell", inline: "bash /tmp/consul/scripts/install-consul.sh",
    env: {
      "USER" => consul_user,
      "GROUP" => consul_group,
      "VERSION" => consul_version,
      "URL" => consul_download_url,
    }
  config.vm.provision "shell", inline: "bash /tmp/consul/scripts/install-consul-systemd.sh"

  # Install vault
  config.vm.provision "shell", inline: "bash /tmp/vault/scripts/install-vault.sh",
    env: {
      "USER" => vault_user,
      "GROUP" => vault_group,
      "VERSION" => vault_version,
      "URL" => vault_download_url
    }
  config.vm.provision "shell", inline: "bash /tmp/vault/scripts/install-vault-systemd.sh"

  # Test Vault
  config.vm.provision "shell", inline: "cd /tmp/shared/scripts && bash setup-testing.sh"

  # TODO: Update to `rake spec` once `network_spec.rb` works for Vagrant
  config.vm.provision "shell", inline: "cd /tmp/vault && rspec spec/vault_spec.rb"

  # Uncomment to run cleanup script - disabled by default for local debugging purposes
  # config.vm.provision "shell", inline: "bash /tmp/shared/scripts/cleanup.sh"

  # Increase memory for Parallels Desktop
  config.vm.provider "parallels" do |p, o|
    p.memory = "1024"
  end

  # Increase memory for Virtualbox
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
  end

  # Increase memory for VMware
  ["vmware_fusion", "vmware_workstation"].each do |p|
    config.vm.provider p do |v|
      v.vmx["memsize"] = "1024"
    end
  end
end

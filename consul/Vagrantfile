# -*- mode: ruby -*-
# vi: set ft=ruby :

# Networking
private_ip = ENV['PRIVATE_IP'] || "192.168.50.161"

# Base box selection
base_box = ENV['BASE_BOX'] || "bento/ubuntu-16.04"

# Consul variables
consul_host_port = ENV['CONSUL_HOST_PORT'] || 8500
consul_version = ENV['CONSUL_VERSION'] || "1.0.6"
consul_ent_url = ENV['CONSUL_ENT_URL']
consul_group = "consul"
consul_user = "consul"
consul_comment = "Consul"
consul_home = "/srv/consul"

# Tests & cleanup
run_tests = ["true", "1"].include?((ENV['RUN_TESTS'] || false).to_s.downcase)
cleanup = ["true", "1"].include?((ENV['CLEANUP'] || true).to_s.downcase)

Vagrant.configure("2") do |config|
  # Use vagrant insecure public key, comment this out to restrict access
  config.ssh.insert_key = false

  # Setup networking
  config.vm.network :private_network, ip: private_ip
  config.vm.network "private_network", type: "dhcp"

  # Use base_box set at the top of this file
  config.vm.box = base_box
  config.vm.hostname = "consul"

  # Copy the Consul and shared directories to the vm
  config.vm.provision "file", source: "../../guides-configuration", destination: "/tmp"

  # Bootstrap the vm
  config.vm.provision "shell", inline: "bash /tmp/shared/scripts/base.sh"

  # Forward Consul port
  config.vm.network :forwarded_port, guest: 8500, host: consul_host_port, auto_correct: true

  # Setup Consul user
  config.vm.provision "shell", inline: "bash /tmp/shared/scripts/setup-user.sh",
    env: {
      "GROUP" => consul_group,
      "USER" => consul_user,
      "COMMENT" => consul_comment,
      "HOME" => consul_home,
    }

  # Install Consul
  config.vm.provision "shell", inline: "bash /tmp/consul/scripts/install-consul.sh",
    env: {
      "VERSION" => consul_version,
      "URL" => consul_ent_url,
      "USER" => consul_user,
      "GROUP" => consul_group,
    }

  config.vm.provision "shell", inline: "bash /tmp/consul/scripts/install-consul-systemd.sh"

  # Run tests if `RUN_TESTS` env var is provided
  if (run_tests)
    config.vm.provision "shell", inline: "cd /tmp && bash /tmp/shared/scripts/setup-testing.sh"
    config.vm.provision "shell", inline: "cd /tmp && rake consul:spec"
  end

  # Cleanup if `CLEANUP` env var is provided
  if (cleanup)
    config.vm.provision "shell", inline: "bash /tmp/shared/scripts/cleanup.sh"
  end

  # Increase memory for Parallels Desktop
  config.vm.provider "parallels" do |p, o|
    p.memory = "1024"
  end

  # Increase memory for Virtualbox
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
  end

  # Increase memory for VMware
  ["vmware_fusion", "vmware_workstation"].each do |p|
    config.vm.provider p do |v|
      v.vmx["memsize"] = "1024"
    end
  end

   config.vm.post_up_message = "
Your Consul dev cluster has been successfully provisioned!

To SSH into the Consul host, run the below command.

  $ vagrant ssh

You can now interact with Consul using any of the CLI (https://www.consul.io/docs/commands/index.html)
or API (https://www.consul.io/api/index.html) commands.

  # Use the CLI to retrieve the Consul members, write a key/value, and read that key/value
  $ consul members
  $ consul kv put cli bar=baz
  $ consul kv get cli

  # Use the API to retrieve the Consul members, write a key/value, and read that key/value
  $ curl http://127.0.0.1:8500/v1/agent/members | jq '.'
  $ curl -X PUT -d 'bar=baz' http://127.0.0.1:8500/v1/kv/api | jq '.'
  $ curl http://127.0.0.1:8500/v1/kv/api | jq '.'

Visit the Consul UI: http://#{private_ip}:#{consul_host_port}

Don't forget to tear your VM down after.

  $ vagrant destroy
"
end
